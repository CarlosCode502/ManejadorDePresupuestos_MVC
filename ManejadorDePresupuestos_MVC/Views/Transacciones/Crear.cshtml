@*
    //V#139 Trabajando con fechas en un formulario (Vista Crear transacción min 00.33)
*@

@model TransaccionCreacionViewModel

@{
    ViewData["Title"] = "Crear Transacción";
}

<h1>Crear Transacción</h1>
<h5>Una transacción te permite indicar tus ingresos y gastos.</h5>

<form asp-action="Crear">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="mb-3">
        <label asp-for="FechaTransaccion" class="form-label"></label>
        @* //V#139 Trabajando con fechas en un formulario (Para no mostrar hora se debe hacer a nivel de modelo min 02.50) *@
        <input asp-for="FechaTransaccion" class="form-control" />
        <span asp-validation-for="FechaTransaccion" class="text-danger"></span>
    </div>

    @* //V#140 Agregando los demás campos (Agregando campos faltantes en la vista crear transacción min 00.30) *@
    <div class="mb-3">
        @* Agregando el Selec de Cuenta ID *@
        <label asp-for="CuentaId" class="form-label"></label>
        <select asp-for="CuentaId" asp-items="Model.Cuentas" class="form-select"></select>
        <span asp-validation-for="CuentaId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        @* Cargando el tipo operacionId en un SelectList con HtmlHelper *@
        <label asp-for="TipoOperacionId" class="form-label"></label>
        @* Permite cargar un Enum en un SelectListItem *@
        <select asp-for="TipoOperacionId" asp-items="Html.GetEnumSelectList<TipoOperacionEnum>()" class="form-select"></select>
        <span asp-validation-for="TipoOperacionId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        @* Agregando el CategoriaId*@
        <label asp-for="CategoriaId" class="form-label"></label>
        <select asp-for="CategoriaId" asp-items="Model.Categorias" class="form-select"></select>
        <span asp-validation-for="CategoriaId" class="text-danger"></span>
    </div>
    <div class="mb-3">
        @* Agregando el Monto*@
        <label asp-for="Monto" class="form-label"></label>
        <input asp-for="Monto" class="form-control" />
        <span asp-validation-for="Monto" class="text-danger"></span>
    </div>
    <div class="mb-3">
        @* Agregando el Observaciones*@
        <label asp-for="Observaciones" class="form-label"></label>
        <textarea asp-for="Observaciones" class="form-control"></textarea>
        <span asp-validation-for="Observaciones" class="text-danger"></span>
    </div>

    <button class="btn btn-primary" type="submit">Enviar</button>
    <a class="btn btn-secondary" asp-action="Index">Cancelar</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    @* //V#141 DropDown Cascada (Creando un dropdown que depende de otro min 01.00) *@
    @* //Creando una función que carge los datos según otro dropdown seleccionado *@

    <script>

        //Obteniendo la url del método ObtenerCategorias2 min 06.50
        const urlObtenerCategorias = '@Url.Action("ObtenerCategorias2")';


        //Agregar etiqueta script para evitar el texto plano
        $(function(){
            //Obtenemos el id del control(el id del campo Tipo de operación)
            $("#TipoOperacionId").change(async function () {
                //Creamos una constante y obtenemos un valor
                const valorSeleccionado = $(this).val();

                //Utilizamos el fetch api
                //Asignando la url obtenida 07.03
                const respuesta = await fetch(urlObtenerCategorias, { //Error aquí lo tenía entre comillas simples
                    method: 'POST',
                    body: valorSeleccionado,
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });

                //Va contener la respuesta del fetch api en formato json
                const json = await respuesta.json();

                //Lo mostramos en un log
                //Muestra un arreglo de objetos (es decir los elementos de la categoria seleccionada)
                // console.log(json);

                //Llenar el select con toda la info obtenida segun seleccion
                const opciones =
                    //Transformar las categorias en options usando backsticks (alt + 96)
                    json.map(categoria => `<option value =${categoria.value}>${categoria.text}</option>`);
                $("#CategoriaId").html(opciones);
                //Insertando el arreglo de categorias en html directo al id de #CategoriaId
                //(Nombre del campo más arriba)
            })
        })
    </script>
}